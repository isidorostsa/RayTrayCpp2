#pragma once

#include "defines.h"
#include "vec3.h"

color: type == vec3_template<double>;

write_color: (inout out_stream: std::ostream, pixel_color: color) = {
    
    //                                  Why not
    intensity: interval == (0.0, std::nextafter(1.0f, 0.0f));

    rbyte := cpp2::unsafe_narrow<int>(256 * pixel_color.x().clamp(intensity));
    gbyte := cpp2::unsafe_narrow<int>(256 * pixel_color.y().clamp(intensity));
    bbyte := cpp2::unsafe_narrow<int>(256 * pixel_color.z().clamp(intensity));

    out_stream << "(rbyte)$ (gbyte)$ (bbyte)$\n";
}