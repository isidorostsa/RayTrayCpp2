#include "defines.h"

#include "sphere.h"
#include "hittable_list.h"
#include "optional_extensions.h"
#include "camera.h"

main: (args) -> int
= {
    cam: camera == (
        16.0/9.0, // aspect_ratio
        1200, // image_width
        1.0, // focal_length
        vec3(0, 0, 0), // camera_center
        2.0, // viewport_height
        10 // samples per pixel
    );

    world: hittable_list = ();

    _ = world.add(make_shared<sphere>(point3(0,-100.5,-1), 100));
    _ = world.add(make_shared<sphere>(point3(0,0,-1), 0.5));

    output_file: std::ofstream = ();
    output_file.open("image.ppm");

    start_time := std::chrono::system_clock::now();
    cam.render(world, output_file);
    duration := std::chrono::system_clock::now() - start_time;
    output_file.close();

    ms: std::chrono::milliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(duration);
    std::clog << "\rFinished, total time: " << ms << std::endl;
}
